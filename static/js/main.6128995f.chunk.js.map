{"version":3,"sources":["temp/Temp.js","Components/NaviBar.js","inputOptions/InOptions.js","Home.js","Components/Slider.js","About.js","NavPanel/NavPanel.js","Gist.js","Users.js","App.js","serviceWorker.js","index.js"],"names":["Temp","obj","Document","console","log","URL","NaviBar","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","area-controls","Collapse","id","Nav","className","Link","to","Button","InOptions","class","this","props","lable","type","Component","defaultProps","Users","Carousel","Item","src","alt","Caption","NavPanel","Gist","state","labels","datasets","data","setData","bind","setState","Math","random","style","width","height","options","responsive","onClick","App","exact","path","component","Home","About","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6128995f.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Temp() {\r\n    const obj=new(Document);\r\n    console.log(obj.URL);\r\n\r\n    return (\r\n        <div>\r\n            <li>FComponent</li>\r\n            <li>FComponent</li>\r\n            <h1>FComponent</h1>\r\n            <p>FComponent</p><p>FComponent</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {Navbar, Nav, Button, Modal,Stiles} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\n/*</div>\r\n<Modal show={show}>\r\n<Modal.Header closeButton>\r\n       <Modal.Title>Log In</Modal.Title>\r\n     </Modal.Header>\r\n    </Modal>\r\n    <Stiles></Stiles>\r\n    onClick={handleShow} onClick={handleShow}\r\n    */\r\n\r\nexport default function NaviBar(){\r\n  return(\r\n    <div>\r\n      \r\n   <Navbar collapseOnSelect expand = \"lg\" bg = \"dark\" variant = \"dark\">\r\n   <Navbar.Brand> AAAAA</Navbar.Brand> \r\n   <Navbar.Toggle area-controls=\"responsiv-navbar-nav\"/> \r\n      <Navbar.Collapse id=\"responsiv-navbar-nav\">\r\n      <Nav className=\"mr-auto\">\r\n        <Nav.Link><Link to=\"/\">Parameters</Link></Nav.Link>\r\n        <Nav.Link><Link to=\"/users\">Charts</Link></Nav.Link>\r\n        <Nav.Link><Link to=\"/about\">Screenshots</Link></Nav.Link>\r\n        <Nav.Link><Link to=\"/temp\">Temp</Link></Nav.Link>\r\n       </Nav>\r\n\r\n       <Nav>\r\n        <Button variant=\"primary\" className=\"mr-2\" >Log In</Button>\r\n        <Button variant=\"primary\" >Sign Out</Button>\r\n        </Nav> \r\n\r\n\r\n      </Navbar.Collapse> \r\n\r\n\r\n    </Navbar>    \r\n    \r\n    \r\n     \r\n  </div>  \r\n)}\r\n\r\n","import React, { Component } from 'react'\r\nimport \"./InOptions.css\"; \r\nexport default class InOptions extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"indiv\">\r\n            <p  class =\"inp\"> {this.props.lable} &nbsp; <input type=\"text\"></input> </p> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nInOptions.defaultProps = {lable: \"Период повторения\"}","import React from 'react';\r\nimport InOptions from './inputOptions/InOptions';\r\n\r\nconst Users = () => {\r\n    return (\r\n        <div>            \r\n            \r\n            <h1> Параметры радиолокатора</h1> \r\n                <InOptions> </InOptions>\r\n                 \r\n        </div>\r\n    )\r\n}\r\nexport default Users;","import React from \"react\";\r\nimport Carousel from 'react-bootstrap/Carousel'\r\n\r\nexport default function NaviBar(){\r\n  return(\r\n    <div>\r\n   <Carousel>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=First slide&bg=373940\"\r\n      alt=\"First slide\"\r\n    />\r\n    <Carousel.Caption>\r\n      <h3>First slide label</h3>\r\n      <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=Second slide&bg=282c34\"\r\n      alt=\"Third slide\"\r\n    />\r\n\r\n    <Carousel.Caption>\r\n      <h3>Second slide label</h3>\r\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n  <Carousel.Item>\r\n    <img\r\n      className=\"d-block w-100\"\r\n      src=\"holder.js/800x400?text=Third slide&bg=20232a\"\r\n      alt=\"Third slide\"\r\n    />\r\n\r\n    <Carousel.Caption>\r\n      <h3>Third slide label</h3>\r\n      <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\r\n    </Carousel.Caption>\r\n  </Carousel.Item>\r\n</Carousel>\r\n   \r\n    \r\n  </div>  \r\n)}","import React from 'react';\r\nimport Slider from\"./Components/Slider\";\r\nconst Users = () => {\r\n    return (\r\n        <div>\r\n            <Slider></Slider>\r\n        </div>\r\n    )\r\n}\r\nexport default Users;","import React, { Component } from 'react'\r\nimport { Button } from 'react-bootstrap';\r\nexport default class NavPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button variant=\"primary\">Load</button>\r\n                <button>Show</button>\r\n                <button>Save</button>\r\n                <button>Print</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Line} from  \"react-chartjs-2\"\r\nimport NavPanel from \"./NavPanel/NavPanel\"\r\nexport default class Gist extends Component {\r\n    constructor(props) {\r\n        super(props)    \r\n        this.state = \r\n                {\r\n                labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"8\",\"10\"],\r\n                    datasets:[\r\n                    {\r\n                      data:[1, 2, 3, 4, 11, 5]\r\n                    }\r\n               ]\r\n              };\r\n           this.setData =  this.setData.bind(this);\r\n        };\r\n    setData(){\r\n        this.setState({\r\n            labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"],\r\n            datasets:[\r\n            {\r\n              data:[Math.random(), Math.random(), Math.random(), Math.random(), Math.random(), Math.random()]\r\n            }\r\n                    ]\r\n        })\r\n             \r\n        }\r\n    render() {\r\n        \r\n        \r\n        return (            \r\n            <div style ={{width: 600, height: 550}}>            \r\n            <Line\r\n               options = {{responsive: true}}                \r\n               data= {this.state}/>\r\n               <button onClick={this.setData}>Show</button>\r\n               <NavPanel></NavPanel>\r\n           </div>    \r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Gist from \"./Gist\"\r\n const Users = () => {\r\n    return (\r\n        <div>\r\n           <h1> Показатели качества системы селекции кросс-поляризационных помех</h1> \r\n            <Gist  />\r\n        </div>\r\n    )\r\n}\r\nexport default Users;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Temp from \"./temp/Temp\"\nimport NaviBar from \"./Components/NaviBar\"\n//import Switch from 'react-bootstrap/esm/Switch';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport Users from \"./Users\";\n\nconst Data={\n  labels:[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"8\",\"10\"],\n  datasets:[\n      {\n        data:[1, 2, 3, 4, 11, 5]\n      }\n ]\n}\n\n\nfunction App() {\n  return (\n    \n    <div>\n      <Router>\n      <NaviBar/>\n        <Switch>\n        <Route exact path=\"/\" component={Home}/>\n        <Route path=\"/users\" component={Users}/>\n        <Route path=\"/about\" component={About}/>\n        <Route path=\"/temp\" component={Temp}/>\n        </Switch>\n      </Router>    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Gist from \"./Gist\"\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}